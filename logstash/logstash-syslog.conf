input {
	udp {
		port => 5000
		type => syslog
		codec =>
			multiline {
				patterns_dir => ["./patterns"]
				pattern => "^%{LOG_ENTRY_START}"
				negate => true
				what => previous
			}
	}
}
filter{
	if [type] == "syslog" {
		grok {
			patterns_dir => ["./patterns"]
			match => {"message" => "%{LOG_LINE_CORRECT}"} 
		}
		
		mutate {
			gsub => [ "application_message", "<\d+>.*?:\s", "", "application_message", "\n(\n)", "\1" ]
		}
		
		date {
			match => [ "application_timestamp", "yyyy-MM-dd HH:mm:ss.SSS" ]
			remove_field => ["application_timestamp"]
		}
		
		if !("_grokparsefailure" in [tags]) {
			mutate {
				replace => [ "message", "%{application_message}" ]
				replace => [ "level", "%{application_level}" ]
				replace => [ "thread", "%{application_thread}" ]
				replace => [ "class", "%{application_class}" ]
				replace => [ "container", "%{container_name} [%{container_id}]" ]
			
				
				remove_field => [ "application_message", "application_level", "application_thread", "application_class", "container_name", "container_id"]
			}
		}
	}
}
output {
  elasticsearch { hosts => ["${ELASTICSEARCH_HOST}"] }
}